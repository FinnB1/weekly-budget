{"version":3,"sources":["Options.js","DoughnutChart.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Options","props","multiplier","state","groceries","drinks","transport","key","val","handler","this","setState","Math","round","multiplyBudget","checkMultiplier","ListGroup","variant","className","Item","Form","Group","as","Row","Control","defaultValue","onChange","e","modifyBudget","target","value","button","React","Component","DoughnutChart","data","datasets","label","backgroundColor","labels","App","console","log","bind","Container","xs","lg","noGutters","Col","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.c9754555.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport ListGroup from \"react-bootstrap/ListGroup\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\n\r\n\r\nexport default class Options extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            groceries: 0,\r\n            drinks: 0,\r\n            transport: 0,\r\n        }\r\n    }\r\n\r\n\r\n    multiplyBudget(key, val) {\r\n        var handler = this.props.handler;\r\n        if (key === \"all\") {\r\n            this.setState({\r\n                groceries: this.state.groceries * 2,\r\n                drinks: this.state.drinks * 2,\r\n            }, function() {\r\n                handler(this.state);\r\n            })\r\n        }\r\n        else if (key === \"undo-all\") {\r\n            this.setState({\r\n                groceries: this.state.groceries * 0.5,\r\n                drinks: this.state.drinks * 0.5,\r\n            }, function() {\r\n                handler(this.state);\r\n            })\r\n        }\r\n        else if (key === \"supermarket\") {\r\n            this.setState({\r\n                groceries: this.state.groceries * 2,\r\n            }, function() {\r\n                handler(this.state);\r\n            })\r\n        }\r\n        else if (key === \"frequency\") {\r\n            this.setState({\r\n                drinks: this.state.drinks * 2,\r\n            }, function() {\r\n                handler(this.state);\r\n            })\r\n        }\r\n        else if (key === \"drinks\") {\r\n            this.setState({\r\n                drinks: Math.round(this.state.drinks * val),\r\n            }, function() {\r\n                handler(this.state);\r\n            })\r\n        }\r\n    }\r\n\r\n    multiplier = false;\r\n\r\n    checkMultiplier(key) {\r\n        if (this.multiplier) {\r\n            this.multiplyBudget(key);\r\n        }\r\n    }\r\n\r\n    modifyBudget(key, val) {\r\n        var handler = this.props.handler;\r\n        switch (key) {\r\n            case \"supermarket\":\r\n                this.setState({\r\n                    groceries: val,\r\n                }, function() {\r\n                    handler(this.state);\r\n                    this.checkMultiplier(\"supermarket\");\r\n                });\r\n                break;\r\n\r\n            case \"frequency\":\r\n                this.setState({\r\n                    drinks: val,\r\n                }, function() {\r\n                    handler(this.state);\r\n                    this.checkMultiplier(\"frequency\");\r\n                });\r\n\r\n                break;\r\n\r\n            case \"location\":\r\n                if (val === \"1\") {\r\n                    this.multiplyBudget(\"all\");\r\n                    this.multiplier = true;\r\n                }\r\n                else if (val !== \"1\" && this.multiplier === true) {\r\n                    this.multiplyBudget(\"undo-all\");\r\n                }\r\n                break;\r\n\r\n            case \"strength\":\r\n                this.multiplyBudget(\"drinks\", val);\r\n                break;\r\n\r\n            case \"transport\":\r\n                this.setState({\r\n                    transport: val,\r\n                }, function() {\r\n                    handler(this.state);\r\n                });\r\n\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <ListGroup variant=\"flush\" className=\"main-list\">\r\n                    <ListGroup.Item>\r\n                        <Form.Group as={Row} className=\"form-row\">\r\n                                I will shop at\r\n                            <Form.Control as=\"select\" className=\"dropdown mx-3 mt-2\" defaultValue=\"...\" onChange={e => this.modifyBudget(\"supermarket\", e.target.value)}>\r\n                                <option>...</option>\r\n                                <option value=\"15\">Lidl or Aldi</option>\r\n                                <option value=\"25\">Tesco or Sainsburys</option>\r\n                                <option value=\"35\">Waitrose or M&S</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Form.Group as={Row} className=\"form-row\">\r\n                            I will go out\r\n                            <Form.Control as=\"select\" className=\"dropdown mx-3 mt-2\" defaultValue=\"...\" onChange={e => this.modifyBudget(\"frequency\", e.target.value)}>\r\n                                <option>...</option>\r\n                                <option value=\"8\">once</option>\r\n                                <option value=\"15\">twice</option>\r\n                                <option value=\"30\">three times or more</option>\r\n                            </Form.Control>\r\n                            a week.\r\n                        </Form.Group>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Form.Group as={Row} className=\"form-row\">\r\n                            I'll be living in\r\n                            <Form.Control as=\"select\" className=\"dropdown mx-3 mt-2\" defaultValue=\"...\" onChange={e => this.modifyBudget(\"location\", e.target.value)}>\r\n                                <option>...</option>\r\n                                <option value=\"1\">in London</option>\r\n                                <option value=\"2\">Elsewhere</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Form.Group as={Row} className=\"form-row\">\r\n                            I'm\r\n                            <Form.Control as=\"select\" className=\"dropdown mx-3 mt-2\" defaultValue=\"...\" onChange={e => this.modifyBudget(\"strength\", e.target.value)}>\r\n                                <option>...</option>\r\n                                <option value=\"0.75\">a lightweight</option>\r\n                                <option value=\"1\">average</option>\r\n                                <option value=\"1.5\">a heavyweight</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Form.Group as={Row} className=\"form-row\">\r\n                            I'm also\r\n                            <Form.Control as=\"select\" className=\"dropdown mx-3 mt-2\" defaultValue=\"...\" onChange={e => this.modifyBudget(\"transport\", e.target.value)}>\r\n                                <option>...</option>\r\n                                <option value=\"0\">within walking distance or using a bus/train pass</option>\r\n                                <option value=\"15\">driving my own car</option>\r\n                                <option value=\"20\">commuting by bus or train without pass</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n                {this.state.button}\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\n\r\n\r\n\r\nexport default class DoughnutChart extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    setValue(key, val) {\r\n        this.setState({\r\n            [key]: val,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let data;\r\n        data = { datasets:[{\r\n            label: \"£ per week\",\r\n                data: [\r\n                    this.props.data.groceries,\r\n                    this.props.data.drinks,\r\n                    this.props.data.transport,\r\n                    5\r\n                ],\r\n                backgroundColor: [\r\n                    'rgba(255, 99, 132, 0.8)',\r\n                    'rgba(54, 162, 235, 0.8)',\r\n                    'rgba(255, 206, 86, 0.8)',\r\n                ],\r\n            }],\r\n            labels:['Groceries', 'Drinks', 'Transport', \"Other Costs\"] }\r\n        return (\r\n            <div>\r\n                <Doughnut data={data} />\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Options from \"./Options\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport DoughnutChart from \"./DoughnutChart\";\n\nexport default class App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            groceries: 0,\n            drinks: 0,\n            transport: 0,\n        }\n        this.handler = this.handler.bind(this);\n    }\n\n    handler = (data) => {\n        console.log(data)\n        this.setState({\n            groceries: data.groceries,\n            drinks: data.drinks,\n            transport: data.transport\n        });\n    }\n\n\n    render() {\n        return (\n            <Container className=\"App\">\n                <ListGroup variant=\"flush\" className=\"main-list-group\">\n                    <ListGroup.Item className=\"title\">\n                        Weekly Budget Calculator 💸\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <Row xs={1} lg={3} noGutters=\"true\">\n                            <Col>\n                                <Options handler={this.handler}/>\n\n                            </Col>\n                            <Col className=\"piechart-container\">\n                                <DoughnutChart data={{\n                                    groceries: this.state.groceries,\n                                    drinks: this.state.drinks,\n                                    transport: this.state.transport,\n                                }}/>\n                            </Col>\n                        </Row>\n                    </ListGroup.Item>\n                </ListGroup>\n\n\n            </Container>\n        );\n    }\n\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}